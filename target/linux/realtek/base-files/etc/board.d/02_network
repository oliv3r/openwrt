
. /lib/functions.sh
. /lib/functions/uci-defaults.sh
. /lib/functions/system.sh

ucidef_set_poe() {
	json_select_object poe
		json_add_string "budget" "$1"
		json_select_array ports
			for port in $2; do
				if [ -n "$3" -a -n "$(expr "$3" : "\(.\+[[:space:]]\)\{0,1\}$port\([[:space:]].*\|\$\)")" ]; then
					continue # skip ports passed via $3
				fi
				json_add_string "" "$port"
			done
		json_select ..
	json_select ..
}

parse_mac_addr()
{
	if ! macaddr_valid "${label_mac:-}"; then
		label_mac="$(get_mac_label)"
	fi

	if [ -f '/etc/fw_env.config' ] && \
	   command -v 'fw_printenv'; then
		if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
			label_mac="$(fw_printenv -n 'ethaddr')"
		fi

		if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
			lan_mac_start="$(fw_printenv -n 'mac_start')"
		fi

		if ! macaddr_valid "${lan_mac_end:-}" > '/dev/null'; then
			lan_mac_end="$(fw_printenv -n 'mac_end')"
		fi
	fi

	if [ -f '/etc/fw_sys.config' ] && \
	   command -v 'fw_printsys'; then
		if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
			label_mac="$(fw_printsys -n 'ethaddr')"
		fi

		if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
			lan_mac_start="$(fw_printsys -n 'mac_start')"
		fi

		if ! macaddr_valid "${lan_mac_end:-}" > '/dev/null'; then
			lan_mac_end="$(fw_printsys -n 'mac_end')"
		fi
	fi

	if [ -n "$(find_mtd_index 'u-boot-env')" ]; then
		if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
			label_mac="$(mtd_get_mac_ascii 'u-boot-env' 'ethaddr')"
		fi

		if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
			lan_mac_start="$(mtd_get_mac_ascii 'u-boot-env' 'mac_start')"
		fi

		if ! macaddr_valid "${lan_mac_end:-}" > '/dev/null'; then
			lan_mac_end="$(mtd_get_mac_ascii 'u-boot-env' 'mac_end')"
		fi
	fi

	if [ -n "$(find_mtd_index 'u-boot-sysenv')" ]; then
		if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
			label_mac="$(mtd_get_mac_ascii 'u-boot-sysenv' 'ethaddr')"
		fi

		if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
			lan_mac_start="$(mtd_get_mac_ascii 'u-boot-sysenv' 'mac_start')"
		fi

		if ! macaddr_valid "${lan_mac_end:-}" > '/dev/null'; then
			lan_mac_end="$(mtd_get_mac_ascii 'u-boot-sysenv' 'mac_end')"
		fi
	fi

	if [ -n "$(find_mtd_index 'u-boot-env2')" ]; then
		if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
			label_mac="$(mtd_get_mac_ascii 'u-boot-env2' 'ethaddr')"
		fi

		if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
			lan_mac_start="$(mtd_get_mac_ascii 'u-boot-env2' 'mac_start')"
		fi

		if ! macaddr_valid "${lan_mac_end:-}" > '/dev/null'; then
			lan_mac_end="$(mtd_get_mac_ascii 'u-boot-env2' 'mac_end')"
		fi
	fi

	if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
		echo 'Unable to find valid (label) MAC address, using random' >&2
		label_mac="$(macaddr_random)"
	fi
}

board=$(board_name)
board_config_update

# Busybox's 'sort' does not support -g sort, e.g. with a prefix, strip and readd
port_list="$(for _port in '/sys/class/net/lan'[0-9]* ; do test -L "${_port:-}" && echo "${_port##*'/lan'} "; done | sort -n)"
lan_list="$(for _port in ${port_list}; do printf "lan${_port} "; done)"

ucidef_set_bridge_device
ucidef_set_interface_lan "$lan_list"

case $board in
hpe,1920-8g|\
hpe,1920-16g|\
hpe,1920-24g)
	label_mac=$(mtd_get_mac_binary factory 0x68)
	mac_count1=$(hexdump -v -n 4 -s 0x110 -e '4 "%d"' $(find_mtd_part factory) 2>/dev/null)
	mac_count2=$(hexdump -v -n 4 -s 0x114 -e '4 "%d"' $(find_mtd_part factory) 2>/dev/null)
	lan_mac_start=$(macaddr_add $lan_mac 2)
	lan_mac_end=$(macaddr_add $lan_mac $((mac_count2-mac_count1)))
	;;
*)
	parse_mac_addr
	;;
esac

# Cross copy MAC address variables, incorrect content will be caught after.
if ! macaddr_valid "${label_mac:-}" > '/dev/null'; then
	label_mac="${lan_mac_start:-}"
fi
if ! macaddr_valid "${lan_mac_start:-}" > '/dev/null'; then
	lan_mac_start="${label_mac:-}"
fi

ucidef_set_interface_macaddr "lan" $lan_mac
ucidef_set_bridge_mac "$lan_mac"
ucidef_set_network_device_mac eth0 $lan_mac
[ -z "$lan_mac_start" ] && lan_mac_start=$lan_mac
for lan in $lan_list; do
	ucidef_set_network_device_mac $lan $lan_mac_start
	[ -z "$lan_mac_end" ] || [ "$lan_mac_start" == "$lan_mac_end" ] && lan_mac_start=$(macaddr_setbit_la $lan_mac_start)
	lan_mac_start=$(macaddr_add $lan_mac_start 1)
done
[ -n "$label_mac" ] && ucidef_set_label_macaddr $label_mac

case $board in
netgear,gs110tpp-v1)
	ucidef_set_poe 130 "$lan_list" "lan9 lan10"
	;;
netgear,gs310tp-v1)
	ucidef_set_poe 55 "$lan_list" "lan9 lan10"
	;;
zyxel,gs1900-10hp)
	ucidef_set_poe 77 "$lan_list" "lan9 lan10"
	;;
zyxel,gs1900-8hp-v1|\
zyxel,gs1900-8hp-v2)
	ucidef_set_poe 70 "$lan_list"
	;;
zyxel,gs1900-24hp-v1|\
zyxel,gs1900-24hp-v2)
	ucidef_set_poe 170 "$lan_list" "lan25 lan26"
	;;
esac

board_config_flush

exit 0
